{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\materials\\\\Excentrixproject\\\\Excentrixproject\\\\client\\\\src\\\\components\\\\DropFiles.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useDropzone } from \"react-dropzone\";\nimport \"../styles/styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DropFiles = ({\n  projectId\n}) => {\n  _s();\n  const [showDropdown, setShowDropdown] = useState(false);\n  const handleDropdownToggle = () => {\n    setShowDropdown(!showDropdown);\n  };\n  const onDrop = async acceptedFiles => {\n    const formData = new FormData();\n    formData.append(\"file\", acceptedFiles[0]);\n    formData.append(\"projectId\", projectId);\n    try {\n      await axios.post(\"http://localhost:8080/api/files\", formData);\n      // Optionally refresh or update the component state after successful upload\n      window.location.reload(); // You might want to handle this more gracefully\n    } catch (error) {\n      console.error(\"Failed to upload file:\", error);\n    }\n  };\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: showDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drop-files\",\n      ...getRootProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Drag and drop files here, or click to select files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(DropFiles, \"/tEJpUkMigD5P/dhAXMejCOY1u4=\", false, function () {\n  return [useDropzone];\n});\n_c = DropFiles;\nexport default DropFiles;\nvar _c;\n$RefreshReg$(_c, \"DropFiles\");","map":{"version":3,"names":["React","useState","axios","useDropzone","jsxDEV","_jsxDEV","DropFiles","projectId","_s","showDropdown","setShowDropdown","handleDropdownToggle","onDrop","acceptedFiles","formData","FormData","append","post","window","location","reload","error","console","getRootProps","getInputProps","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/materials/Excentrixproject/Excentrixproject/client/src/components/DropFiles.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport \"../styles/styles.css\";\r\n\r\nconst DropFiles = ({ projectId }) => {\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n\r\n  const handleDropdownToggle = () => {\r\n    setShowDropdown(!showDropdown);\r\n  };\r\n\r\n  const onDrop = async (acceptedFiles) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", acceptedFiles[0]);\r\n    formData.append(\"projectId\", projectId);\r\n\r\n    try {\r\n      await axios.post(\"http://localhost:8080/api/files\", formData);\r\n      // Optionally refresh or update the component state after successful upload\r\n      window.location.reload(); // You might want to handle this more gracefully\r\n    } catch (error) {\r\n      console.error(\"Failed to upload file:\", error);\r\n    }\r\n  };\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div>\r\n      {/* <button onClick={handleDropdownToggle}>\r\n        {showDropdown ? \"Hide Options\" : \"Show Options\"}\r\n      </button> */}\r\n      {showDropdown && (\r\n        <div className=\"drop-files\" {...getRootProps()}>\r\n          <input {...getInputProps()} />\r\n          <h3>Drag and drop files here, or click to select files</h3>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropFiles;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMU,oBAAoB,GAAGA,CAAA,KAAM;IACjCD,eAAe,CAAC,CAACD,YAAY,CAAC;EAChC,CAAC;EAED,MAAMG,MAAM,GAAG,MAAOC,aAAa,IAAK;IACtC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,aAAa,CAAC,CAAC,CAAC,CAAC;IACzCC,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAET,SAAS,CAAC;IAEvC,IAAI;MACF,MAAML,KAAK,CAACe,IAAI,CAAC,iCAAiC,EAAEH,QAAQ,CAAC;MAC7D;MACAI,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,MAAM;IAAEE,YAAY;IAAEC;EAAc,CAAC,GAAGrB,WAAW,CAAC;IAAES;EAAO,CAAC,CAAC;EAE/D,oBACEP,OAAA;IAAAoB,QAAA,EAIGhB,YAAY,iBACXJ,OAAA;MAAKqB,SAAS,EAAC,YAAY;MAAA,GAAKH,YAAY,CAAC,CAAC;MAAAE,QAAA,gBAC5CpB,OAAA;QAAA,GAAWmB,aAAa,CAAC;MAAC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC9BzB,OAAA;QAAAoB,QAAA,EAAI;MAAkD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtB,EAAA,CApCIF,SAAS;EAAA,QAqB2BH,WAAW;AAAA;AAAA4B,EAAA,GArB/CzB,SAAS;AAsCf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}