{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\materials\\\\Excentrixproject\\\\Excentrixproject\\\\client\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../styles/styles.css\";\nimport { useDropzone } from \"react-dropzone\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projects = [{\n  id: 1,\n  name: \"Login\"\n}, {\n  id: 2,\n  name: \"tasty eats\"\n}, {\n  id: 3,\n  name: \"hangman\"\n}, {\n  id: 4,\n  name: \"easybank\"\n}, {\n  id: 5,\n  name: \"flipkart\"\n}, {\n  id: 6,\n  name: \"amazon\"\n}, {\n  id: 7,\n  name: \"netflix\"\n}, {\n  id: 8,\n  name: \"spotify\"\n}, {\n  id: 9,\n  name: \"youtube\"\n}];\nconst Dashboard = () => {\n  _s();\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [files, setFiles] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const handleProjectClick = project => {\n    setSelectedProject(project);\n  };\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: \"image/*,application/pdf\",\n    // Accepts only image files and PDFs\n    onDrop: acceptedFiles => {\n      setFiles(acceptedFiles.map(file => Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      })));\n    },\n    onDragOver: () => console.log(\"Dragging over drop zone\"),\n    // Optional: handle drag over event\n    onDragLeave: () => console.log(\"Drag left drop zone\") // Optional: handle drag leave event\n  });\n  const handleUpload = async () => {\n    if (!selectedProject) {\n      alert(\"Please select a project first\");\n      return;\n    }\n    setUploading(true);\n    try {\n      const formData = new FormData();\n      files.forEach(file => {\n        formData.append(\"file\", file);\n      });\n      formData.append(\"projectId\", selectedProject.id); // Ensure this matches the expected schema type (String)\n\n      const response = await axios.post(\"http://localhost:8080/api/files\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      console.log(response.data);\n      alert(\"Files uploaded successfully!\");\n    } catch (error) {\n      console.error(\"Error uploading files:\", error);\n      alert(\"Error uploading files.\");\n    } finally {\n      setUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: projects.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleProjectClick(project),\n          className: (selectedProject === null || selectedProject === void 0 ? void 0 : selectedProject.id) === project.id ? \"active\" : \"\",\n          children: project.name\n        }, project.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: selectedProject ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedProject.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Details about \", selectedProject.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/project-details/${selectedProject.id}`,\n          children: \"View Project Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"b\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a project to view details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drop-files\",\n      ...getRootProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Drag and drop files here, or click to select files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        disabled: uploading,\n        children: uploading ? \"Uploading...\" : \"Upload Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-previews\",\n        children: files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-preview\",\n          children: file.type.startsWith(\"image/\") ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: file.preview,\n            alt: file.name,\n            style: {\n              width: 100,\n              height: 100\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: file.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this)\n        }, file.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"8H+06ZrcSQwV98g+eZDZREdfwE4=\", false, function () {\n  return [useDropzone];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useDropzone","axios","Link","jsxDEV","_jsxDEV","projects","id","name","Dashboard","_s","selectedProject","setSelectedProject","files","setFiles","uploading","setUploading","handleProjectClick","project","getRootProps","getInputProps","accept","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","onDragOver","console","log","onDragLeave","handleUpload","alert","formData","FormData","forEach","append","response","post","headers","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","to","disabled","type","startsWith","src","alt","style","width","height","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Desktop/materials/Excentrixproject/Excentrixproject/client/src/components/Dashboard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../styles/styles.css\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst projects = [\r\n  { id: 1, name: \"Login\" },\r\n  { id: 2, name: \"tasty eats\" },\r\n  { id: 3, name: \"hangman\" },\r\n  { id: 4, name: \"easybank\" },\r\n  { id: 5, name: \"flipkart\" },\r\n  { id: 6, name: \"amazon\" },\r\n  { id: 7, name: \"netflix\" },\r\n  { id: 8, name: \"spotify\" },\r\n  { id: 9, name: \"youtube\" },\r\n];\r\n\r\nconst Dashboard = () => {\r\n  const [selectedProject, setSelectedProject] = useState(null);\r\n  const [files, setFiles] = useState([]);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const handleProjectClick = (project) => {\r\n    setSelectedProject(project);\r\n  };\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    accept: \"image/*,application/pdf\", // Accepts only image files and PDFs\r\n    onDrop: (acceptedFiles) => {\r\n      setFiles(\r\n        acceptedFiles.map((file) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n    onDragOver: () => console.log(\"Dragging over drop zone\"), // Optional: handle drag over event\r\n    onDragLeave: () => console.log(\"Drag left drop zone\"), // Optional: handle drag leave event\r\n  });\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedProject) {\r\n      alert(\"Please select a project first\");\r\n      return;\r\n    }\r\n\r\n    setUploading(true);\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      files.forEach((file) => {\r\n        formData.append(\"file\", file);\r\n      });\r\n      formData.append(\"projectId\", selectedProject.id); // Ensure this matches the expected schema type (String)\r\n\r\n      const response = await axios.post(\r\n        \"http://localhost:8080/api/files\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        }\r\n      );\r\n\r\n      console.log(response.data);\r\n      alert(\"Files uploaded successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error uploading files:\", error);\r\n      alert(\"Error uploading files.\");\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"sidebar\">\r\n        <b>\r\n          <h1>Projects</h1>\r\n        </b>\r\n        <ul>\r\n          {projects.map((project) => (\r\n            <li\r\n              key={project.id}\r\n              onClick={() => handleProjectClick(project)}\r\n              className={selectedProject?.id === project.id ? \"active\" : \"\"}\r\n            >\r\n              {project.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"main-content\">\r\n        {selectedProject ? (\r\n          <div>\r\n            <b>\r\n              <h2>{selectedProject.name}</h2>\r\n            </b>\r\n            <p>Details about {selectedProject.name}</p>\r\n            <Link to={`/project-details/${selectedProject.id}`}>\r\n              View Project Details\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <b>\r\n            <p>Select a project to view details</p>\r\n          </b>\r\n        )}\r\n      </div>\r\n      <div className=\"drop-files\" {...getRootProps()}>\r\n        <input {...getInputProps()} />\r\n        <h3>Drag and drop files here, or click to select files</h3>\r\n        <button onClick={handleUpload} disabled={uploading}>\r\n          {uploading ? \"Uploading...\" : \"Upload Files\"}\r\n        </button>\r\n        <div className=\"file-previews\">\r\n          {files.map((file) => (\r\n            <div key={file.name} className=\"file-preview\">\r\n              {file.type.startsWith(\"image/\") ? (\r\n                <img\r\n                  src={file.preview}\r\n                  alt={file.name}\r\n                  style={{ width: 100, height: 100 }}\r\n                />\r\n              ) : (\r\n                <div>{file.name}</div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}